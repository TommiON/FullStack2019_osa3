{"version":3,"sources":["components/PersonForm.js","components/FilterForm.js","components/Persons.js","services/dbService.js","index.js"],"names":["PersonForm","props","react_default","a","createElement","onSubmit","klikkauskasittelija","value","nimiarvo","onChange","nimikasittelija","numeroarvo","numerokasittelija","type","FilterForm","arvo","kasittelija","Persons","persons","filter","henkilo","name","includes","suodatin","map","key","number","onClick","id","dbService","axios","get","then","response","data","newPerson","post","personId","url","concat","delete","nimi","numero","console","log","put","App","_useState","useState","_useState2","Object","slicedToArray","setPersons","_useState3","_useState4","newName","setNewName","_useState5","_useState6","newNumber","setNewNumber","_useState7","_useState8","newFilter","setNewFilter","_useState9","_useState10","statusMessage","setStatusMessage","useEffect","DbService","saatu","_ref","viesti","style","color","borderStyle","background","borderRadius","marginBottom","padding","components_FilterForm","event","target","components_PersonForm","preventDefault","window","confirm","nro","find","pers","person","catch","error","setTimeout","components_Persons","paluu","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.70be1050.chunk.js","sourcesContent":["import React from 'react'\n\nconst PersonForm = (props) => {\n    return(\n        <div>\n             <form onSubmit={props.klikkauskasittelija}>\n            <div>\n            nimi: <input value={props.nimiarvo} onChange={props.nimikasittelija}/>\n            </div>\n            <div>\n            numero: <input value={props.numeroarvo} onChange={props.numerokasittelija}/>\n            </div>\n            <div>\n            <button type=\"submit\">lisää</button>\n            </div>\n            </form>\n        </div>\n    )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst FilterForm = (props) => {\n    return(\n        <div>\n            Rajaa näytettäviä: <input value={props.arvo} onChange={props.kasittelija} />\n        </div>\n    )\n}\n\nexport default FilterForm","import React from 'react'\n\nconst Persons = (props) => {\n    const henkilot = props.persons.filter(henkilo => henkilo.name.includes(props.suodatin))\n    const renderoitavatHenkilot = henkilot.map(henkilo =>\n    <p key={henkilo.name}>{henkilo.name} {henkilo.number} <button onClick={() => props.kasittelija(henkilo.id)}>poista</button></p>)\n    return(renderoitavatHenkilot)\n}\n\nexport default Persons","import axios from 'axios'\n\nconst getAll = () => {\n    const request = axios.get('http://localhost:3001/api/persons')\n    // const request = axios.get('/api/persons')\n    return request.then(response => response.data)\n}\n\nconst getOne = personId => {\n    const url = `http://localhost:3001/api/persons/${personId}`\n    const request = axios.get(url)\n    return request.then(response => response.data)\n}\n\nconst add = newPerson => {\n    const request = axios.post('http://localhost:3001/api/persons', newPerson)\n    return request.then(response => response.data)\n}\n\nconst remove = personId => {\n    const url = `http://localhost:3001/api/persons/${personId}`\n    const request = axios.delete(url)\n    return request.then(response => response.data)\n}\n\nconst replace = (personId, nimi, numero) => {\n    const url = `http://localhost:3001/api/persons/${personId}`\n    console.log('nyt ollaan Axios-funktiossa')\n    console.log('id: ', personId, \" nimi: \", nimi, \" uusi numero: \", numero)\n    const request = axios.put(url, \n        {\n            name: nimi,\n            number: numero,\n            id: personId\n        })\n    return request.then(response => response.data)\n}\n\nexport default {getAll, getOne, add, remove, replace}\n\n","import ReactDOM from 'react-dom';\nimport React, { useState, useEffect } from 'react'\nimport PersonForm from './components/PersonForm'\nimport FilterForm from './components/FilterForm'\nimport Persons from './components/Persons'\nimport DbService from './services/dbService'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n  const [ newFilter, setNewFilter] = useState('')\n  const [ statusMessage, setStatusMessage] = useState(null)\n\n  useEffect(() => {\n    DbService\n    .getAll()\n    .then(saatu => setPersons(saatu))\n  }, [])\n\n  const lisaaNimi = (event) => {\n      event.preventDefault()\n      const nimet = persons.map(henkilo => henkilo.name)\n      if(nimet.includes(newName)) {\n        if (window.confirm(`Nimi on jo luettelossa, korvataanko numero?`)) {\n          const nro = persons.find(pers => pers.name === newName).id\n          DbService.replace(nro, newName, newNumber)\n          .then(saatu => setPersons(persons.map(person => person.id === saatu.id ? saatu : person)))\n          .then(setStatusMessage(`Käyttäjän ${newName} numero muutettu`))\n          .then(setNewName(''))\n          .then(setNewNumber(''))\n          .catch(error => {\n            setStatusMessage(`Ei onnistu, nimeä ei enää ole luettelossa`)\n          })   \n          setTimeout(() => {setStatusMessage(null)}, 3000)\n        }\n      } else {\n        const uusiHenkilo = {\n            name: newName,\n            number: newNumber\n        }\n        DbService\n        .add(uusiHenkilo)\n        .then(saatu => setPersons(persons.concat(saatu)))\n        .then(setStatusMessage(`${newName} lisätty`))\n        .then(setNewName(''))\n        .then(setNewNumber(''))\n        .catch(error => {setStatusMessage('Virhe: nimen pitää olla vähintään 3 merkkiä, numeron 8.')})\n        setTimeout(() => {setStatusMessage(null)}, 3000)\n      }\n  }\n\n  const poistaNimi = (id) => {\n    if (window.confirm(`Poistetaanko henkilö luettelosta?`)) {\n        DbService\n        .remove(id)\n        .then(paluu => setPersons(persons.filter(person => person.id !== id)))\n        .then(setStatusMessage(`Poistettu`))\n    }\n    setTimeout(() => {setStatusMessage(null)}, 3000)\n  }\n\n  const nimiTekstiMuuttuu = (event) => {setNewName(event.target.value)}\n  const numeroTekstiMuuttuu = (event) => {setNewNumber(event.target.value)}\n  const rajausTekstiMuuttuu = (event) => {setNewFilter(event.target.value)}\n\n  const Notification = ({viesti}) => {\n    const notificationStyle = {\n      color: 'green',\n      borderStyle: 'solid',\n      background: \"lightgrey\",\n      borderRadius: 5,\n      marginBottom: 10,\n      padding: 10\n    }\n    if(viesti === null) {\n      return null\n    }\n    return(\n      <div style={notificationStyle}>{viesti}</div>\n    )\n  }\n  \n  return (\n    <div>\n      <Notification viesti={statusMessage} />\n      <h2>Puhelinluettelo</h2>\n      <FilterForm arvo={newFilter} kasittelija={rajausTekstiMuuttuu} />\n      <h2>Lisää uusi</h2>\n      <PersonForm\n        klikkauskasittelija={lisaaNimi}\n        nimiarvo={newName}\n        nimikasittelija={nimiTekstiMuuttuu}\n        numeroarvo={newNumber}\n        numerokasittelija={numeroTekstiMuuttuu} />\n      <h2>Numerot</h2>\n      <Persons persons={persons} suodatin={newFilter} kasittelija={poistaNimi} />\n    </div>\n  )\n}\n\nexport default App\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}